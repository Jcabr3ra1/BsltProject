@use 'sass:color';

// Variables - Paleta de colores estrictamente morado, blanco y negro
$primary-color: #6a0dad; // Morado principal
$primary-dark: #4a0080; // Morado oscuro
$primary-light: #9c4dcc; // Morado claro
$white: #ffffff;
$black: #000000;
$dark-gray: #121212;
$medium-gray: #1f1f1f;
$light-gray: #2a2a2a;
$text-primary: $white;
$text-secondary: #e5e5e5;
$text-muted: #b3b3b3;
$error-color: $primary-light; // Usando morado claro para errores
$error-bg: rgba($primary-dark, 0.2);
$card-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);
$border-radius: 8px;
$spacing-sm: 0.5rem;
$spacing-md: 1rem;
$spacing-lg: 2rem;
$transition-speed: 0.3s;

// Estilos del componente
:host {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: $spacing-md;
}

.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: $spacing-md;
  background: linear-gradient(135deg, $primary-dark 0%, $black 100%);
  width: 100%;
  position: relative;
  overflow: hidden;
  
  // Efecto de patr√≥n de puntos (como Netflix)
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(rgba($white, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    z-index: 0;
    opacity: 0.2;
  }
  
  // Efecto de brillo en el centro
  &:before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, rgba($primary-color, 0.5) 0%, transparent 70%);
    filter: blur(80px);
    z-index: 0;
    opacity: 0.6;
  }
}

.login-card {
  width: 100%;
  max-width: 400px;
  padding: $spacing-lg;
  background: rgba($medium-gray, 0.8);
  border-radius: $border-radius;
  box-shadow: $card-shadow;
  animation: fadeIn 0.3s ease-out;
  border: 1px solid rgba($primary-color, 0.2);
  backdrop-filter: blur(10px);
  position: relative;
  z-index: 1;
}

.login-header {
  text-align: center;
  margin-bottom: $spacing-lg;
  
  h2 {
    margin: 0;
    font-size: 2rem;
    font-weight: 700;
    color: $white;
    position: relative;
    display: inline-block;
    
    &:after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 60px;
      height: 3px;
      background: linear-gradient(to right, $primary-color, $primary-light);
      border-radius: 3px;
    }
  }
  
  p {
    margin: $spacing-lg 0 0;
    color: $text-secondary;
    font-size: 1rem;
  }
}

.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: $spacing-lg;
  
  p {
    margin-top: $spacing-md;
    color: $text-secondary;
  }
}

form {
  display: flex;
  flex-direction: column;
  gap: $spacing-md;
}

mat-form-field {
  width: 100%;
  
  ::ng-deep {
    .mat-mdc-form-field-focus-overlay {
      background-color: rgba($primary-light, 0.1);
    }
    
    .mdc-text-field--outlined {
      background-color: rgba($light-gray, 0.3);
      border-radius: $border-radius;
    }
    
    .mdc-text-field--focused .mdc-notched-outline__leading,
    .mdc-text-field--focused .mdc-notched-outline__notch,
    .mdc-text-field--focused .mdc-notched-outline__trailing {
      border-color: $primary-light !important;
      border-width: 2px;
    }
    
    .mat-mdc-form-field-subscript-wrapper {
      color: $text-secondary;
    }
    
    .mdc-floating-label {
      color: $white !important;
    }
    
    .mat-mdc-form-field-required-marker {
      color: $white !important;
    }
    
    mat-label {
      color: $white !important;
    }
    
    input {
      color: $white;
      caret-color: $primary-light;
    }
    
    .mat-mdc-form-field-error {
      color: $primary-light !important;
    }
  }
  
  .mat-icon {
    color: $text-muted;
  }
  
  &.mat-focused .mat-icon {
    color: $primary-light;
  }
}

.error-message {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  padding: $spacing-md;
  background-color: $error-bg;
  border-radius: 4px;
  margin-bottom: $spacing-md;
  animation: fadeIn 0.2s ease-out;
  
  mat-icon {
    color: $error-color;
  }
  
  span {
    color: color.adjust($error-color, $lightness: -10%);
    font-size: 0.875rem;
  }
}

.form-actions {
  display: flex;
  justify-content: center;
  margin-top: $spacing-lg;
  
  button {
    width: 100%;
    padding: 0.9rem;
    font-size: 1.1rem;
    background-color: $primary-color;
    color: $white !important;
    border-radius: $border-radius;
    border: none;
    letter-spacing: 1px;
    font-weight: 600;
    transition: all $transition-speed ease;
    box-shadow: 0 5px 15px rgba($primary-color, 0.4);
    position: relative;
    overflow: hidden;
    
    .mdc-button__label {
      color: $white !important;
    }
    
    span {
      color: $white !important;
    }
    
    &:hover:not([disabled]) {
      background-color: $primary-light;
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba($primary-color, 0.6);
    }
    
    &[disabled] {
      opacity: 0.7;
      cursor: not-allowed;
      color: $white !important;
      
      .mdc-button__label {
        color: $white !important;
      }
      
      span {
        color: $white !important;
      }
    }
    
    // Efecto de brillo al hacer hover
    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: all 0.6s ease;
      z-index: -1;
    }
    
    &:hover:not([disabled]):before {
      left: 100%;
    }
  }
}

.register-link {
  text-align: center;
  margin-top: $spacing-lg;
  
  p {
    color: $text-secondary;
    font-size: 0.9rem;
    margin: 0;
  }
  
  a {
    color: $primary-light;
    text-decoration: none;
    font-weight: 600;
    transition: color $transition-speed ease;
    
    &:hover {
      color: $white;
      text-decoration: underline;
    }
  }
}

// Animaciones
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}